{"version":3,"sources":["components/Links.js","components/Link.js","components/map/Nodes.js","components/map/Node.js","utils/debounce.js","App.js","index.js"],"names":["Links","props","links","map","link","index","react_default","a","createElement","Link","key","text","Fragment","href","Nodes","nodeHeight","nodeWidth","padding","nodes","startY","level","x","y","parentWidth","getOffset","updateLinks","setSelected","offset","child","lastOffset","newStartY","nodeY","Node_Node","node","parentX","parentStartY","parentY","parentOffset","Node","state","width","height","onClick","_this","selected","forceUpdate","this","bbox","getBBox","setState","rect","setAttribute","_this2","fill","parentSelected","stroke","ref","e","dx","dy","d","concat","children","React","PureComponent","debounce","f","ms","isCooldown","apply","arguments","setTimeout","startSize","App","data","moving","lastX","lastY","zoom","showFullMap","size","Math","max","resetZoomAndPosition","getBoundingClientRect","min","getSelected","onDrugStart","clientX","clientY","onDrug","onDrugEnd","onZoom","newSize","deltaY","console","log","className","viewBox","onMouseDown","onMouseMove","onMouseUp","onWheel","length","childLinks","filter","Boolean","Object","objectSpread2","getChildrenLength","forEach","rootElement","document","getElementById","ReactDOM","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.cbbc4de6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from './Link';\n\nfunction Links(props) {\n    return props.links.map((link, index) => {\n        return <Link link={link} key={index + link.text} />;\n    });\n}\n\nexport { Links }\n","import React from \"react\";\nimport {Links} from \"./Links\";\n\n/**\n * @return {null}\n */\nfunction Link(props) {\n    const { link } = props;\n\n    if (!link) return null;\n\n    if (link && link.links) {\n        return (\n            <>\n                <ul>\n                    {link.text}\n                    <Links links={link.links} />\n                </ul>\n            </>\n        );\n    }\n\n    if (link && link.link) {\n        return (\n            <li>\n                <a href={link.link}>{link.text}</a>\n            </li>\n        );\n    }\n\n    return <li>{link.text}</li>;\n}\n\nexport { Link }\n","import React from \"react\";\nimport {Node} from \"./Node\";\n\nfunction Nodes(props) {\n    const {\n        nodeHeight,\n        nodeWidth,\n        padding,\n        nodes,\n        startY,\n        level,\n        x,\n        y,\n        parentWidth,\n        getOffset,\n        updateLinks,\n        setSelected,\n    } = props;\n\n    let offset = 0;\n    return nodes.map((child, index) => {\n        const lastOffset = offset;\n        offset = offset + getOffset(child);\n\n        const newStartY = +startY + (index + lastOffset) * (nodeHeight + padding * 4);\n        const endY = +startY + (index + offset) * (nodeHeight + padding * 4);\n        const nodeY = newStartY + (endY - newStartY) / 2;\n        return (\n            <Node\n                key={index + child.text}\n                node={child}\n                level={level}\n                parentX={x}\n                parentStartY={startY}\n                parentY={y}\n                parentOffset={lastOffset + index}\n                parentWidth={parentWidth}\n                x={+x + parentWidth + nodeWidth}\n                startY={newStartY}\n                y={nodeY}\n                index={index}\n                padding={padding}\n                nodeWidth={nodeWidth}\n                nodeHeight={nodeHeight}\n                updateLinks={updateLinks}\n                setSelected={setSelected}\n                getOffset={getOffset}\n            />\n        );\n    });\n}\n\nexport { Nodes }\n","import React from \"react\";\nimport {Nodes} from \"./Nodes\";\n\nclass Node extends React.PureComponent {\n    state = {\n        width: 0,\n        height: 10,\n    };\n\n    componentDidMount() {\n        const {\n            padding,\n        } = this.props;\n        const bbox = this.text.getBBox();\n        this.setState({\n            width: bbox.width + 2 * padding,\n            height: bbox.height + 2 * padding,\n        });\n        this.rect.setAttribute(\"x\", bbox.x - padding);\n        this.rect.setAttribute(\"y\", bbox.y - padding);\n        this.rect.setAttribute(\"width\", bbox.width + 2 * padding);\n    }\n\n    onClick = () => {\n        if (this.props.node.selected) {\n            this.props.setSelected(this.props.node, false);\n        } else {\n            this.props.setSelected(this.props.node, true);\n        }\n        this.props.updateLinks();\n        this.forceUpdate();\n    };\n\n    render() {\n        const props = this.props;\n        const level = props.level ? props.level + 1 : 1;\n        const {\n            padding,\n        } = this.props;\n\n        return (\n            <>\n                <rect\n                    onClick={this.onClick}\n                    x={props.x - padding}\n                    y={props.y - padding}\n                    width={this.state.width}\n                    height={this.state.height}\n                    fill={\n                        this.props.node.selected || this.props.parentSelected\n                            ? \"#aaaaaa\"\n                            : \"aliceblue\"\n                    }\n                    stroke=\"black\"\n                    ref={e => (this.rect = e)}\n                />\n                <text\n                    x={props.x}\n                    y={+props.y + padding}\n                    dx={props.dx}\n                    dy={props.dy}\n                    ref={e => (this.text = e)}\n                >\n                    {props.node.text}\n                </text>\n                <path\n                    d={`M ${+props.parentX + props.parentWidth - padding} ${\n                        props.parentY\n                        } C${+props.parentX + props.parentWidth + padding + 50} ${\n                        props.parentY\n                        } ${+props.x - padding - 50} ${props.y} ${props.x - padding} ${\n                        props.y\n                        }`}\n                    stroke=\"black\"\n                />\n                <Nodes\n                    nodes={props.node.children}\n                    level={level}\n                    parentOffset={props.parentOffset}\n                    x={props.x}\n                    y={props.y}\n                    startY={props.startY}\n                    parentWidth={this.state.width}\n                    nodeWidth={this.props.nodeWidth}\n                    nodeHeight={this.props.nodeHeight}\n                    padding={padding}\n                    updateLinks={this.props.updateLinks}\n                    setSelected={this.props.setSelected}\n                    getOffset={this.props.getOffset}\n                />\n            </>\n        );\n    }\n}\n\nexport { Node };\n","function debounce(f, ms) {\n    let isCooldown = false;\n\n    return function () {\n        if (isCooldown) return;\n\n        f.apply(this, arguments);\n\n        isCooldown = true;\n\n        setTimeout(() => (isCooldown = false), ms);\n    };\n}\n\nexport { debounce }\n","import React from \"react\";\nimport \"./styles.css\";\nimport {Link} from \"./components/Link\";\nimport {Node} from \"./components/map/Node\";\nimport {debounce} from \"./utils/debounce\";\n\nimport data from \"./roadmap.json\";\n\nconst nodeWidth = 100;\nconst nodeHeight = 20;\nconst padding = 10;\nconst startSize = 1000;\n\nexport default class App extends React.PureComponent {\n    static getSelected(node) {\n        if (!node.children.length) {\n            if (node.selected) {\n                return {\n                    text: node.text,\n                    link: node.link\n                };\n            } else {\n                return;\n            }\n        }\n\n        const childLinks = node.children\n            .map(child => App.getSelected(child))\n            .filter(Boolean);\n\n        if (childLinks.length) {\n            return {\n                text: node.text,\n                links: childLinks\n            };\n        }\n    }\n\n    static setSelected(node, selected) {\n        node.children = node.children.map(child => {\n            return App.setSelected(child, selected);\n        });\n        node.selected = selected;\n        return {...node};\n    }\n\n    static getOffset(child) {\n        let offset = 0;\n\n        getChildrenLength(child);\n\n        function getChildrenLength(child) {\n            if (child.children.length) {\n                child.children.forEach(getChildrenLength);\n            }\n            offset += child.children.length;\n        }\n\n        return offset;\n    }\n\n    state = {\n        links: [],\n        data: data,\n        x: 0,\n        y: (App.getOffset(data) * (nodeHeight + padding * 4)) / 2 - startSize / 2,\n        width: startSize,\n        height: startSize,\n        startSize: startSize,\n        moving: false,\n        lastX: null,\n        lastY: null,\n        zoom: 1\n    };\n\n    showFullMap = () => {\n        const bbox = this.map.getBBox();\n        const width = bbox.width;\n        const height = bbox.height;\n        const size = Math.max(width, height);\n        this.setState({\n            x: 0,\n            y: 0,\n            width: size,\n            height: size,\n            zoom: size / this.state.startSize\n        });\n    };\n\n    resetZoomAndPosition = () => {\n        const rect = this.map.getBoundingClientRect();\n        const width = rect.width;\n        const height = rect.height;\n        const size = Math.min(width, height);\n        this.setState({\n            x: 0,\n            y: (App.getOffset(data) * (nodeHeight + padding * 4)) / 2 - size / 2,\n            width: size,\n            height: size,\n            startSize: size\n        });\n    };\n\n    componentDidMount() {\n        this.resetZoomAndPosition();\n    }\n\n    updateLinks = () => {\n        this.setState({\n            links: App.getSelected(data)\n        });\n    };\n\n    onDrugStart = e => {\n        this.setState({\n            moving: true,\n            lastX: e.clientX,\n            lastY: e.clientY\n        });\n    };\n\n    onDrug = debounce(e => {\n        if (this.state.moving) {\n            if (this.state.lastX && this.state.lastY) {\n                this.setState({\n                    x: this.state.x + (this.state.lastX - e.clientX) * this.state.zoom,\n                    y: this.state.y + (this.state.lastY - e.clientY) * this.state.zoom,\n                    lastX: e.clientX,\n                    lastY: e.clientY\n                });\n            }\n        }\n    }, 30);\n\n    onDrugEnd = () => {\n        this.setState({\n            moving: false\n        });\n    };\n\n    onZoom = debounce(e => {\n        const newSize = this.state.width + e.deltaY * 5;\n        if (newSize < 100) return;\n        this.setState({\n            x: this.state.x - (newSize - this.state.width) / 2,\n            y: this.state.y - (newSize - this.state.width) / 2,\n            width: newSize,\n            height: newSize,\n            zoom: newSize / this.state.startSize\n        });\n    }, 30);\n\n    render() {\n        console.log(this.state.links);\n        const startY = 30;\n        const y = startY + (App.getOffset(data) * (nodeHeight + padding * 4)) / 2;\n        return (\n            <div className=\"app\">\n                <div className=\"map\">\n                    <svg\n                        ref={e => (this.map = e)}\n                        className=\"App\"\n                        viewBox={[\n                            this.state.x,\n                            this.state.y,\n                            this.state.width,\n                            this.state.height\n                        ]}\n                        fill=\"none\"\n                        onMouseDown={this.onDrugStart}\n                        onMouseMove={this.onDrug}\n                        onMouseUp={this.onDrugEnd}\n                        onWheel={this.onZoom}\n                    >\n                        <Node\n                            node={data}\n                            x=\"20\"\n                            y={y}\n                            startY={startY}\n                            updateLinks={this.updateLinks}\n                            setSelected={App.setSelected}\n                            getOffset={App.getOffset}\n                            nodeWidth={nodeWidth}\n                            nodeHeight={nodeHeight}\n                            padding={padding}\n                        />\n                    </svg>\n                </div>\n                <div className=\"links\">\n                    <h2>Темы для изучения</h2>\n                    <Link link={this.state.links}/>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}